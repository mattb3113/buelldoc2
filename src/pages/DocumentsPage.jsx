import React, { useState, useEffect } from 'react';
import { collection, query, where, orderBy, getDocs } from 'firebase/firestore';
import { Download, Calendar, DollarSign, FileText } from 'lucide-react';
import { useAuth } from '../context/AuthContext.jsx';
import { db } from '../utils/firebase.js';
import Sidebar from '../components/Sidebar.jsx';
import Button from '../components/Button.jsx';

export default function DocumentsPage() {
  const { currentUser } = useAuth();
  const [documents, setDocuments] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (currentUser) {
      fetchDocuments();
    }
  }, [currentUser]);

  const fetchDocuments = async () => {
    try {
      const q = query(
        collection(db, 'documents'),
        where('userId', '==', currentUser.uid),
        orderBy('createdAt', 'desc')
      );
      
      const querySnapshot = await getDocs(q);
      const docs = querySnapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data()
      }));
      
      setDocuments(docs);
    } catch (error) {
      console.error('Error fetching documents:', error);
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };

  const generateDocument = (doc) => {
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
    <title>Paystub - ${doc.payDate}</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
        .header { text-align: center; border-bottom: 2px solid #333; padding-bottom: 20px; margin-bottom: 30px; }
        .section { margin-bottom: 20px; }
        .grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
        .item { display: flex; justify-content: space-between; padding: 5px 0; border-bottom: 1px solid #eee; }
        .total { font-weight: bold; border-top: 2px solid #333; padding-top: 10px; }
        .currency { text-align: right; }
    </style>
</head>
<body>
    <div class="header">
        <h1>PAYSTUB</h1>
        <p>Pay Date: ${doc.payDate}</p>
        <p>Pay Period: ${doc.payPeriodDates.start} to ${doc.payPeriodDates.end}</p>
    </div>
    
    <div class="grid">
        <div>
            <h3>Earnings</h3>
            <div class="item">
                <span>Gross Pay</span>
                <span class="currency">$${doc.grossPay.toFixed(2)}</span>
            </div>
            
            <h3>Taxes</h3>
            <div class="item">
                <span>Federal Tax (12%)</span>
                <span class="currency">$${doc.taxes.federal.toFixed(2)}</span>
            </div>
            <div class="item">
                <span>State Tax (5%)</span>
                <span class="currency">$${doc.taxes.state.toFixed(2)}</span>
            </div>
            <div class="item">
                <span>Social Security (6.2%)</span>
                <span class="currency">$${doc.taxes.socialSecurity.toFixed(2)}</span>
            </div>
            <div class="item">
                <span>Medicare (1.45%)</span>
                <span class="currency">$${doc.taxes.medicare.toFixed(2)}</span>
            </div>
            
            <div class="item total">
                <span>Net Pay</span>
                <span class="currency">$${doc.netPay.toFixed(2)}</span>
            </div>
        </div>
        
        <div>
            <h3>Year-to-Date</h3>
            <div class="item">
                <span>YTD Gross</span>
                <span class="currency">$${doc.ytdTotals.grossPay.toFixed(2)}</span>
            </div>
            <div class="item">
                <span>YTD Net</span>
                <span class="currency">$${doc.ytdTotals.netPay.toFixed(2)}</span>
            </div>
            <div class="item">
                <span>YTD Federal Tax</span>
                <span class="currency">$${doc.ytdTotals.taxes.federal.toFixed(2)}</span>
            </div>
            <div class="item">
                <span>YTD State Tax</span>
                <span class="currency">$${doc.ytdTotals.taxes.state.toFixed(2)}</span>
            </div>
        </div>
    </div>
    
    <div style="margin-top: 40px; text-align: center; font-size: 12px; color: #666;">
        Generated by BuellDocs - For novelty and educational purposes only
    </div>
</body>
</html>`;

    const blob = new Blob([htmlContent], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `paystub_${doc.payDate}.html`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="flex">
        <Sidebar />
        
        <div className="flex-1 p-8">
          <div className="max-w-7xl mx-auto">
            {/* Header */}
            <div className="mb-8">
              <h1 className="text-3xl font-bold text-gray-900">My Documents</h1>
              <p className="text-gray-600 mt-2">
                Manage and download your generated paystubs
              </p>
            </div>

            {/* Documents List */}
            <div className="bg-white rounded-lg shadow-sm border">
              {loading ? (
                <div className="p-8 text-center">
                  <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
                  <p className="text-gray-600 mt-4">Loading documents...</p>
                </div>
              ) : documents.length === 0 ? (
                <div className="p-8 text-center">
                  <FileText className="w-12 h-12 text-gray-400 mx-auto mb-4" />
                  <h3 className="text-lg font-medium text-gray-900 mb-2">No documents yet</h3>
                  <p className="text-gray-600 mb-6">
                    Start by creating your first paystub to see it here
                  </p>
                  <Button onClick={() => window.location.href = '/dashboard'}>
                    Create First Paystub
                  </Button>
                </div>
              ) : (
                <div className="divide-y divide-gray-200">
                  {documents.map((doc) => (
                    <div key={doc.id} className="p-6 hover:bg-gray-50 transition-colors">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-4">
                          <div className="flex-shrink-0">
                            <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
                              <FileText className="w-5 h-5 text-blue-600" />
                            </div>
                          </div>
                          <div>
                            <h3 className="text-lg font-medium text-gray-900">
                              Paystub - {formatDate(doc.payDate)}
                            </h3>
                            <div className="flex items-center space-x-4 mt-1">
                              <div className="flex items-center text-sm text-gray-600">
                                <Calendar className="w-4 h-4 mr-1" />
                                Generated {formatDate(doc.createdAt)}
                              </div>
                              <div className="flex items-center text-sm text-gray-600">
                                <DollarSign className="w-4 h-4 mr-1" />
                                Net: ${doc.netPay?.toFixed(2) || '0.00'}
                              </div>
                            </div>
                          </div>
                        </div>
                        <div className="flex items-center space-x-3">
                          <Button
                            variant="outline"
                            size="sm"
                            onClick={() => generateDocument(doc)}
                            className="flex items-center space-x-2"
                          >
                            <Download className="w-4 h-4" />
                            <span>Download</span>
                          </Button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}